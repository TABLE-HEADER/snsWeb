/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2022-05-30 07:23:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

String name		= request.getParameter("name") != null ? request.getParameter("name") : "";
String userid	= request.getParameter("userid") != null ? request.getParameter("userid") : "";
String year		= request.getParameter("year") != null ? request.getParameter("year") : "";
String month	= request.getParameter("month") != null ? request.getParameter("month") : "";
String day		= request.getParameter("day") != null ? request.getParameter("day") : "";
String email	= request.getParameter("email") != null ? request.getParameter("email") : "";
String pass1	= request.getParameter("pass1") != null ? request.getParameter("pass1") : "";
String pass2	= request.getParameter("pass2") != null ? request.getParameter("pass2") : "";

 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<title>ログイン</title>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/view/style.css\">\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body id=\"bg\">\r\n");
      out.write("\r\n");
      out.write("\t\t<div align=\"center\"><a href=\"");
      out.print(request.getContextPath() );
      out.write("/mainpage\">\r\n");
      out.write("\t\t<img src=\"");
      out.print(request.getContextPath() );
      out.write("/file/kandan_b.png\"  alt=\"kandan\" width=\"461px\" height=\"83px\" style=\"margin: 50px 0 0\">\r\n");
      out.write("\t\t</a></div>\r\n");
      out.write("\r\n");
      out.write("\t\t<h1 style=\"margin:20px\" align=\"center\">新規登録</h1>\r\n");
      out.write("\r\n");
      out.write("\t\t");

		ArrayList<String> formMessage = (ArrayList<String>)request.getAttribute("formMessage");
		if(formMessage != null && formMessage.size() >= 1) {
			
      out.write("\r\n");
      out.write("\t\t\t<p align=\"center\">\r\n");
      out.write("\t\t\t\t<font size=\"5\" color=\"yellow\">\r\n");
      out.write("\t\t\t\t\t** 入力に誤りがあります。以下のご確認をお願いします。 **<br>\r\n");
      out.write("\t\t\t\t</font>\r\n");
      out.write("\t\t\t\t<font size=\"4\" color=\"yellow\">\r\n");
      out.write("\t\t\t\t\t");

					for(String message : formMessage){
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
      out.print( message );
      out.write("<br>\r\n");
      out.write("\t\t\t\t\t\t");

					}
					
      out.write("\r\n");
      out.write("\t\t\t\t</font>\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t\t");

		}
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/signup\" method=\"post\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<table style=\"border-spacing:10px;\" align=\"center\" >\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=\"200\" align=\"right\">名前：</th>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=text size=\"30\" name=\"name\" value=\"");
      out.print(name );
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=\"200\" align=\"right\">ユーザーID：</th>\r\n");
      out.write("\t\t\t\t\t\t<td>@<input type=text size=\"27\" name=\"userid\" placeholder=\"半角英数字を入力\" value=\"");
      out.print(userid );
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=\"200\" align=\"right\">生年月日：</th>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<input type=text size=\"5\" name=\"year\" placeholder=\"年\" value=\"");
      out.print(year );
      out.write("\">/\r\n");
      out.write("\t\t\t\t\t\t<input type=text size=\"5\" name=\"month\"  placeholder=\"月\" value=\"");
      out.print(month );
      out.write("\">/\r\n");
      out.write("\t\t\t\t\t\t<input type=text size=\"5\" name=\"day\"  placeholder=\"日\" value=\"");
      out.print(day );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=\"200\" align=\"right\">メールアドレス：</th>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=text size=\"30\" name=\"email\" value=\"");
      out.print(email );
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=\"200\" align=\"right\">パスワード：</th>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=text size=\"30\" name=\"pass1\" placeholder=\"半角英数字8文字以上\" value=\"");
      out.print(pass1 );
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=\"200\" align=\"right\">パスワード（確認用）：</th>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=text size=\"30\" name=\"pass2\" value=\"");
      out.print(pass2 );
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<p align=\"center\" style=\"margin: 20px\"><input type=\"checkbox\" name=\"privacy\" value=\"1\">&nbsp;アカウントを非公開にする</p>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<p align=\"center\" style=\"margin: 20px\"><input type=\"submit\" value=\"登録\"></p>\r\n");
      out.write("\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
